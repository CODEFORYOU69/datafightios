name: iOS CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: macos-latest

    env:
      IS_TESTING: "YES"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Cache Firebase Emulator
        uses: actions/cache@v3
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-firebase-emulators-

      - name: Start Firebase Emulator Suite
        run: |
          firebase emulators:start --only firestore,auth,storage --project datafight-5d0cf &
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Wait for Firebase Emulator to Start
        run: sleep 15

      - name: Build and Test
        run: |
          xcodebuild test -project datafight.xcodeproj -scheme datafight -destination 'platform=iOS Simulator,name=iPad Pro (13-inch) (5th generation),OS=latest' CODE_SIGNING_ALLOWED=NO
        env:
          IS_TESTING: "YES"

      - name: Stop Firebase Emulator Suite
        if: always()
        run: firebase emulators:stop
