name: iOS CI with Firebase Emulator

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IS_TESTING: "YES"

jobs:
  build-and-test:
    name: Build and Test with Firebase Emulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Cache Firebase Emulator
        uses: actions/cache@v3
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-firebase-emulators-

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default

      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPad.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"

      - name: Test with Firebase Emulator
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
          IS_TESTING: "YES"
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPad.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          firebase emulators:exec --only firestore,auth,storage --project datafight-5d0cf \
            "xcodebuild test-without-building -scheme \"$scheme\" -\"$filetype_parameter\" \"$file_to_build\" -destination \"platform=$platform,name=$device\""
