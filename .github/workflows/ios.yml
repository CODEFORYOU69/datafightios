name: iOS starter workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test default scheme using iPad simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Firebase CLI
        run: |
          npm install -g firebase-tools

      - name: List Available Simulators
        run: |
          xcrun simctl list devices

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default

      - name: Build for testing
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          device="iPad (9th generation)"
          if [ "$scheme" = "default" ]; then scheme=$(cat default); fi
          if [ -n "$(ls -A | grep -i \\.xcworkspace\$)" ]; then
            filetype_parameter="workspace"
            file_to_build="$(ls -A | grep -i \\.xcworkspace\$)"
          else
            filetype_parameter="project"
            file_to_build="$(ls -A | grep -i \\.xcodeproj\$)"
          fi
          file_to_build=$(echo "$file_to_build" | awk '{$1=$1;print}')
          xcodebuild build-for-testing \
            -scheme "$scheme" \
            -"$filetype_parameter" "$file_to_build" \
            -destination "platform=$platform,name=$device" \
            CODE_SIGNING_ALLOWED=NO

      - name: Run Tests with Firebase Emulator
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
          FIREBASE_PROJECT_ID: datafight-5d0cf
          FIREBASE_EMULATOR_RUNNING: 'YES'
        run: |
          device="iPad (9th generation)"
          if [ "$scheme" = "default" ]; then scheme=$(cat default); fi
          if [ -n "$(ls -A | grep -i \\.xcworkspace\$)" ]; then
            filetype_parameter="workspace"
            file_to_build="$(ls -A | grep -i \\.xcworkspace\$)"
          else
            filetype_parameter="project"
            file_to_build="$(ls -A | grep -i \\.xcodeproj\$)"
          fi
          file_to_build=$(echo "$file_to_build" | awk '{$1=$1;print}')

          # Start Firebase Emulator and run tests
          firebase emulators:exec --only firestore,auth \
            "xcodebuild test-without-building \
              -scheme \"$scheme\" \
              -\"$filetype_parameter\" \"$file_to_build\" \
              -destination \"platform=$platform,name=$device\" \
              CODE_SIGNING_ALLOWED=NO"
